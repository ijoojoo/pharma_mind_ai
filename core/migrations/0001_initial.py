# Generated by Django 5.2.4 on 2025-08-06 00:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='企业名称')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='联系人')),
                ('contact_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='联系电话')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '企业信息',
                'verbose_name_plural': '企业信息',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('employee_number', models.CharField(max_length=100, verbose_name='工号')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='手机号')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '职员信息',
                'verbose_name_plural': '职员信息',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('card_number', models.CharField(max_length=100, verbose_name='会员卡号')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='姓名')),
                ('phone', models.CharField(max_length=50, verbose_name='手机号')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='住址')),
                ('current_points', models.IntegerField(default=0, verbose_name='当前积分')),
                ('total_points', models.IntegerField(default=0, verbose_name='累计积分')),
                ('total_consumption', models.DecimalField(decimal_places=5, default=0, max_digits=18, verbose_name='累计消费金额')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '会员信息',
                'verbose_name_plural': '会员信息',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('source_product_id', models.CharField(max_length=100, verbose_name='源系统商品ID')),
                ('product_code', models.CharField(max_length=100, verbose_name='商品编码')),
                ('name', models.CharField(max_length=255, verbose_name='商品名称')),
                ('specification', models.CharField(max_length=255, verbose_name='规格')),
                ('unit', models.CharField(max_length=50, verbose_name='单位')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='生产企业')),
                ('approval_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='批准文号')),
                ('dosage_form', models.CharField(blank=True, max_length=100, null=True, verbose_name='剂型')),
                ('retail_price', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='零售价')),
                ('member_price', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='会员价')),
                ('category_enterprise_l1', models.CharField(blank=True, max_length=100, null=True, verbose_name='企业-大分类')),
                ('category_enterprise_l2', models.CharField(blank=True, max_length=100, null=True, verbose_name='企业-中分类')),
                ('category_standard_l1', models.CharField(blank=True, max_length=100, null=True, verbose_name='标准-大分类')),
                ('category_standard_l2', models.CharField(blank=True, max_length=100, null=True, verbose_name='标准-中分类')),
                ('medicare_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='医保编码')),
                ('last_modified_at', models.DateTimeField(verbose_name='最后修改时间')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '商品信息',
                'verbose_name_plural': '商品信息',
                'unique_together': {('enterprise', 'product_code'), ('enterprise', 'source_product_id')},
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='门店名称')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='经营场所')),
                ('business_scope', models.TextField(blank=True, null=True, verbose_name='经营范围')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '门店信息',
                'verbose_name_plural': '门店信息',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_time', models.DateTimeField(verbose_name='销售时间')),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='数量')),
                ('list_price', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='应收单价')),
                ('actual_price', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='实收单价')),
                ('total_amount', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='实收总金额')),
                ('discount_amount', models.DecimalField(decimal_places=5, default=0, max_digits=18, verbose_name='折扣总金额')),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='批号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee', verbose_name='销售员')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.member', verbose_name='会员')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product', verbose_name='销售商品')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.store', verbose_name='销售门店')),
            ],
            options={
                'verbose_name': '销售记录',
                'verbose_name_plural': '销售记录',
            },
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_date', models.DateField(verbose_name='采集日期')),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='数量')),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='批号')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='有效期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product', verbose_name='商品')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.store', verbose_name='门店')),
            ],
            options={
                'verbose_name': '库存快照',
                'verbose_name_plural': '库存快照',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.store', verbose_name='所属门店'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('supplier_code', models.CharField(max_length=100, verbose_name='供应商编码')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '供应商信息',
                'verbose_name_plural': '供应商信息',
                'unique_together': {('enterprise', 'supplier_code')},
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateField(verbose_name='采购日期')),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='数量')),
                ('unit_price', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='单价')),
                ('total_amount', models.DecimalField(decimal_places=5, max_digits=18, verbose_name='总金额')),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='批号')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='生产日期')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='有效期')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product', verbose_name='商品')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.supplier', verbose_name='供应商')),
            ],
            options={
                'verbose_name': '采购记录',
                'verbose_name_plural': '采购记录',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='标签名称')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enterprise', verbose_name='所属企业')),
            ],
            options={
                'verbose_name': '会员标签',
                'verbose_name_plural': '会员标签',
                'unique_together': {('enterprise', 'name')},
            },
        ),
        migrations.AddField(
            model_name='member',
            name='tags',
            field=models.ManyToManyField(blank=True, to='core.tag', verbose_name='标签'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', '企业主'), ('manager', '店长'), ('staff', '店员')], default='staff', max_length=10, verbose_name='角色')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户配置',
                'verbose_name_plural': '用户配置',
            },
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('enterprise', 'employee_number')},
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('enterprise', 'card_number')},
        ),
    ]
